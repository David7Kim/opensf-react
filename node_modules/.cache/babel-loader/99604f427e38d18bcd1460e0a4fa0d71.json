{"ast":null,"code":"import _regeneratorRuntime from\"D:/reactProject/opensales/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _toConsumableArray from\"D:/reactProject/opensales/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"D:/reactProject/opensales/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/reactProject/opensales/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{React,useState,useEffect,useCallback,useRef}from\"react\";import{useNavigate}from\"react-router-dom\";import{useInView}from\"react-intersection-observer\";import PostList from\"./PostList\";import axios from\"axios\";import BoardHeader from\"../board/BoardHeader\";import BoardAddPop from\"./BoardAddPop\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function BoardMain(){var defaultSettings={title:\"게시판\"};//Navigate , postList , addPopState 선언\nvar navigate=useNavigate();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),postList=_useState2[0],setPostList=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),addPopState=_useState4[0],setAddPopState=_useState4[1];// const [lastIntersectingImage, setLastIntersectingImage] = useState < HTMLDivElement > null;\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var _useInView=useInView(),_useInView2=_slicedToArray(_useInView,2),ref=_useInView2[0],inView=_useInView2[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),page=_useState8[0],setPage=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),limitPage=_useState10[0],setLimitPage=_useState10[1];//게시글 가져오는 함수 (페이징 적용한 메소드)\nvar getPostdata=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://데이터를 불러오기전 로딩 true (시각적으로 불러오는 gif 첨부)\nsetLoading(true);_context.next=3;return axios.get(\"chatter/post?page=\".concat(page,\"&size=7\")).then(function(res){console.log(res);setPostList(function(prevState){return[].concat(_toConsumableArray(prevState),[res.data.content]);});setLimitPage(res.data.totalPages);});case 3://data호출이 완료 되었을 경우 로딩 false 이건뭐 간단하니깐 이미지만 하단에다 넣든가 하면될듯\nsetLoading(false);case 4:case\"end\":return _context.stop();}}},_callee);})),[page]);//렌더시 Post Data를 호출하여 Document를 그려준다.\nuseEffect(function(){getPostdata();},[getPostdata]);//Page를 증가시킨다. (여기에 조건 추가하면될듯)\nuseEffect(function(){if(inView&&!loading){//여기 부터 수정하면 될듯\nsetPage(function(prevState){return prevState+1;});}},[inView,loading]);//게시글 자세히 보기\nvar getSeePostDetail=function getSeePostDetail(e){console.log(\"postid is \",e.currentTarget.getAttribute(\"data-postid\"));navigate(\"/post/detail/view\",{state:e.currentTarget.getAttribute(\"data-postid\")});};//이전으로 돌아가기\nvar goBack=function goBack(){navigate(\"/home\");};//게시글 등록 팝업 open\nvar addPost=function addPost(){setAddPopState(true);};//게시글 등록 팝업 close\nvar closePost=function closePost(){setAddPopState(false);};var turnOffLoad=function turnOffLoad(){setLoading(true);};return/*#__PURE__*/_jsxs(\"div\",{children:[addPopState===true&&/*#__PURE__*/_jsx(BoardAddPop,{leftFunc:closePost,rightFunc:closePost}),/*#__PURE__*/_jsxs(\"div\",{className:\"board_box\",children:[addPopState===false&&/*#__PURE__*/_jsx(BoardHeader,{leftFunc:goBack,rightFunc:addPost,title:defaultSettings.title,option:true,className:\"board_header\"}),/*#__PURE__*/_jsx(\"div\",{className:\"board_contents\",children:/*#__PURE__*/_jsx(PostList,{live:ref,postList:postList,seedetial:getSeePostDetail/** 게시글 상세보기시 goBack기능을 넣으려고 하는것 같음? */,goBack:goBack,limitPage:limitPage,turnOffLoad:turnOffLoad})})]})]});}export default BoardMain;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","useNavigate","useInView","PostList","axios","BoardHeader","BoardAddPop","BoardMain","defaultSettings","title","navigate","postList","setPostList","addPopState","setAddPopState","loading","setLoading","ref","inView","page","setPage","limitPage","setLimitPage","getPostdata","get","then","res","console","log","prevState","data","content","totalPages","getSeePostDetail","e","currentTarget","getAttribute","state","goBack","addPost","closePost","turnOffLoad"],"sources":["D:/reactProject/opensales/src/board/Board.js"],"sourcesContent":["import { React, useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport PostList from \"./PostList\";\r\nimport axios from \"axios\";\r\nimport BoardHeader from \"../board/BoardHeader\";\r\nimport BoardAddPop from \"./BoardAddPop\";\r\n\r\nfunction BoardMain() {\r\n  let defaultSettings = {\r\n    title: \"게시판\",\r\n  };\r\n  //Navigate , postList , addPopState 선언\r\n  const navigate = useNavigate();\r\n  const [postList, setPostList] = useState([]);\r\n  const [addPopState, setAddPopState] = useState(false);\r\n  // const [lastIntersectingImage, setLastIntersectingImage] = useState < HTMLDivElement > null;\r\n  const [loading, setLoading] = useState(false);\r\n  const [ref, inView] = useInView();\r\n  const [page, setPage] = useState(0);\r\n  const [limitPage, setLimitPage] = useState();\r\n\r\n  //게시글 가져오는 함수 (페이징 적용한 메소드)\r\n  const getPostdata = useCallback(async () => {\r\n    //데이터를 불러오기전 로딩 true (시각적으로 불러오는 gif 첨부)\r\n    setLoading(true);\r\n    await axios.get(`chatter/post?page=${page}&size=7`).then((res) => {\r\n      console.log(res);\r\n      setPostList((prevState) => [...prevState, res.data.content]);\r\n      setLimitPage(res.data.totalPages);\r\n    });\r\n    //data호출이 완료 되었을 경우 로딩 false 이건뭐 간단하니깐 이미지만 하단에다 넣든가 하면될듯\r\n    setLoading(false);\r\n  }, [page]);\r\n  //렌더시 Post Data를 호출하여 Document를 그려준다.\r\n  useEffect(() => {\r\n    getPostdata();\r\n  }, [getPostdata]);\r\n  //Page를 증가시킨다. (여기에 조건 추가하면될듯)\r\n  useEffect(() => {\r\n    if (inView && !loading) {\r\n      //여기 부터 수정하면 될듯\r\n      setPage((prevState) => prevState + 1);\r\n    }\r\n  }, [inView, loading]);\r\n\r\n  //게시글 자세히 보기\r\n  const getSeePostDetail = (e) => {\r\n    console.log(\"postid is \", e.currentTarget.getAttribute(\"data-postid\"));\r\n    navigate(\"/post/detail/view\", {\r\n      state: e.currentTarget.getAttribute(\"data-postid\"),\r\n    });\r\n  };\r\n  //이전으로 돌아가기\r\n  const goBack = () => {\r\n    navigate(\"/home\");\r\n  };\r\n\r\n  //게시글 등록 팝업 open\r\n  const addPost = () => {\r\n    setAddPopState(true);\r\n  };\r\n  //게시글 등록 팝업 close\r\n  const closePost = () => {\r\n    setAddPopState(false);\r\n  };\r\n  const turnOffLoad = () => {\r\n    setLoading(true);\r\n  };\r\n  return (\r\n    <div>\r\n      {addPopState === true && <BoardAddPop leftFunc={closePost} rightFunc={closePost} />}\r\n      <div className=\"board_box\">\r\n        {addPopState === false && (\r\n          <BoardHeader leftFunc={goBack} rightFunc={addPost} title={defaultSettings.title} option={true} className={\"board_header\"} />\r\n        )}\r\n        <div className=\"board_contents\">\r\n          <PostList\r\n            live={ref}\r\n            postList={postList}\r\n            seedetial={getSeePostDetail}\r\n            /** 게시글 상세보기시 goBack기능을 넣으려고 하는것 같음? */\r\n            goBack={goBack}\r\n            limitPage={limitPage}\r\n            turnOffLoad={turnOffLoad}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default BoardMain;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}