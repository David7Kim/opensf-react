{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactProject\\\\opensales\\\\src\\\\board\\\\PostList.js\";\nimport React from \"react\";\nimport \"./Board.css\";\nimport PostBox from \"./postBox\"; //PostBox를 그려줍니다.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostList(_ref) {\n  let {\n    live,\n    postList,\n    seedetial,\n    goBack,\n    turnOffLoad,\n    limitPage\n  } = _ref;\n  console.log(postList);\n\n  for (let i = 0; i <= limitPage - 1; i++) {\n    if (i === limitPage) {\n      turnOffLoad();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: postList && // Page 값들을 map 해서 1페이지에 있는 리스트들을 출력한다.\n    postList.map((post, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: post.map((pet, ide) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: post.length - 1 === ide ? /*#__PURE__*/_jsxDEV(PostBox, {\n          live: live,\n          postList: pet,\n          seedetail: seedetial,\n          goBack: goBack\n        }, `calendar-week-${pet.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 19\n        }, this) :\n        /*#__PURE__*/\n        //이제 여기서 값이 더이상 없을경우 출력하지 않는 조건을 넣어줘야 한다.\n        _jsxDEV(PostBox, {\n          postList: pet,\n          seedetail: seedetial,\n          goBack: goBack\n        }, `calendar-week-${pet.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 19\n        }, this)\n      }, ide, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this))\n    }, \"parent\" + idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","PostBox","PostList","live","postList","seedetial","goBack","turnOffLoad","limitPage","console","log","i","map","post","idx","pet","ide","length","id"],"sources":["D:/reactProject/opensales/src/board/PostList.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./Board.css\";\r\nimport PostBox from \"./postBox\";\r\n//PostBox를 그려줍니다.\r\nfunction PostList({ live, postList, seedetial, goBack, turnOffLoad, limitPage }) {\r\n  console.log(postList);\r\n\r\n  for (let i = 0; i <= limitPage - 1; i++) {\r\n    if (i === limitPage) {\r\n      turnOffLoad();\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"list\">\r\n      {/* 스크롤을 내리면 postList안에 page 0,1,2,3 값이 list형태로 넣어진다. */}\r\n      {postList &&\r\n        // Page 값들을 map 해서 1페이지에 있는 리스트들을 출력한다.\r\n        postList.map((post, idx) => (\r\n          <React.Fragment key={\"parent\" + idx}>\r\n            {/* post안에 있는 data들을 map함수로 추출해온다. */}\r\n            {post.map((pet, ide) => (\r\n              <React.Fragment key={ide}>\r\n                {/* ide(index)가 게시글의 크기만큼 되었을 경우 live 속성으로 page를 +1 증가시킨다. */}\r\n                {post.length - 1 === ide ? (\r\n                  <PostBox live={live} postList={pet} key={`calendar-week-${pet.id}`} seedetail={seedetial} goBack={goBack} />\r\n                ) : (\r\n                  //이제 여기서 값이 더이상 없을경우 출력하지 않는 조건을 넣어줘야 한다.\r\n                  <PostBox postList={pet} key={`calendar-week-${pet.id}`} seedetail={seedetial} goBack={goBack} />\r\n                )}\r\n              </React.Fragment>\r\n            ))}\r\n          </React.Fragment>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\nexport default PostList;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;;;AACA,SAASC,QAAT,OAAiF;EAAA,IAA/D;IAAEC,IAAF;IAAQC,QAAR;IAAkBC,SAAlB;IAA6BC,MAA7B;IAAqCC,WAArC;IAAkDC;EAAlD,CAA+D;EAC/EC,OAAO,CAACC,GAAR,CAAYN,QAAZ;;EAEA,KAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIH,SAAS,GAAG,CAAjC,EAAoCG,CAAC,EAArC,EAAyC;IACvC,IAAIA,CAAC,KAAKH,SAAV,EAAqB;MACnBD,WAAW;IACZ;EACF;;EACD,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,UAEGH,QAAQ,IACP;IACAA,QAAQ,CAACQ,GAAT,CAAa,CAACC,IAAD,EAAOC,GAAP,kBACX,QAAC,KAAD,CAAO,QAAP;MAAA,UAEGD,IAAI,CAACD,GAAL,CAAS,CAACG,GAAD,EAAMC,GAAN,kBACR,QAAC,KAAD,CAAO,QAAP;QAAA,UAEGH,IAAI,CAACI,MAAL,GAAc,CAAd,KAAoBD,GAApB,gBACC,QAAC,OAAD;UAAS,IAAI,EAAEb,IAAf;UAAqB,QAAQ,EAAEY,GAA/B;UAAoE,SAAS,EAAEV,SAA/E;UAA0F,MAAM,EAAEC;QAAlG,GAA0C,iBAAgBS,GAAG,CAACG,EAAG,EAAjE;UAAA;UAAA;UAAA;QAAA,QADD;QAAA;QAGC;QACA,QAAC,OAAD;UAAS,QAAQ,EAAEH,GAAnB;UAAwD,SAAS,EAAEV,SAAnE;UAA8E,MAAM,EAAEC;QAAtF,GAA8B,iBAAgBS,GAAG,CAACG,EAAG,EAArD;UAAA;UAAA;UAAA;QAAA;MANJ,GAAqBF,GAArB;QAAA;QAAA;QAAA;MAAA,QADD;IAFH,GAAqB,WAAWF,GAAhC;MAAA;MAAA;MAAA;IAAA,QADF;EAJJ;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD;;KA/BQZ,Q;AAgCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}