{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\"; // type RandomImageType = {\n//   id: string;\n//   author: string;\n//   width: number;\n//   height: number;\n//   url: string;\n//   download_url: string;\n// };\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ScrollPaging() {\n  _s();\n\n  const [randomImageList, setRandomImageList] = useState([]);\n  const [page, setPage] = useState(0);\n\n  const handleScroll = () => {\n    const scrollHeight = document.documentElement.scrollHeight;\n    const scrollTop = document.documentElement.scrollTop;\n    const clientHeight = document.documentElement.clientHeight;\n    console.log(\"스크롤 이벤트 발생\");\n\n    if (scrollTop + clientHeight >= scrollHeight) {\n      console.log(\"페이지 끝에 스크롤이 닿았음\");\n      setPage(prev => prev + 1);\n    }\n  };\n\n  const getRandomImageThenSet = async () => {\n    console.log(\"fetching 함수 호출됨\");\n\n    try {\n      // const { data } = await axios.get(`https://picsum.photos/v2/list?page=${page}&limit=7`);\n      const result = await axios.get(`chatter/post?page=${page}&size=5`).then(res => {\n        console.log(res);\n      }); // setRandomImageList(randomImageList.concat(data));\n    } catch {\n      console.error(\"fetching error\");\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"page ? \", page);\n    getRandomImageThenSet();\n  }, [page]);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n/*-------------------------스크롤 페이징 구현부분 - ------------------*/\n\n_s(ScrollPaging, \"cthbYQLR2II8hPWbbuwBpka8WxE=\");\n\n_c = ScrollPaging;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollPaging\");","map":{"version":3,"names":["useState","useEffect","React","axios","ScrollPaging","randomImageList","setRandomImageList","page","setPage","handleScroll","scrollHeight","document","documentElement","scrollTop","clientHeight","console","log","prev","getRandomImageThenSet","result","get","then","res","error","window","addEventListener","removeEventListener"],"sources":["D:/reactProject/opensales/src/board/ScrollPaging.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// type RandomImageType = {\r\n//   id: string;\r\n//   author: string;\r\n//   width: number;\r\n//   height: number;\r\n//   url: string;\r\n//   download_url: string;\r\n// };\r\nexport default function ScrollPaging() {\r\n  const [randomImageList, setRandomImageList] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleScroll = () => {\r\n    const scrollHeight = document.documentElement.scrollHeight;\r\n    const scrollTop = document.documentElement.scrollTop;\r\n    const clientHeight = document.documentElement.clientHeight;\r\n\r\n    console.log(\"스크롤 이벤트 발생\");\r\n\r\n    if (scrollTop + clientHeight >= scrollHeight) {\r\n      console.log(\"페이지 끝에 스크롤이 닿았음\");\r\n      setPage((prev) => prev + 1);\r\n    }\r\n  };\r\n\r\n  const getRandomImageThenSet = async () => {\r\n    console.log(\"fetching 함수 호출됨\");\r\n    try {\r\n      // const { data } = await axios.get(`https://picsum.photos/v2/list?page=${page}&limit=7`);\r\n      const result = await axios.get(`chatter/post?page=${page}&size=5`).then((res) => {\r\n        console.log(res);\r\n      });\r\n      // setRandomImageList(randomImageList.concat(data));\r\n    } catch {\r\n      console.error(\"fetching error\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"page ? \", page);\r\n    getRandomImageThenSet();\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* {randomImageList?.map((randomImage) => (\r\n        <img key={randomImage.id} src={randomImage.download_url} alt=\"random\" />\r\n      ))} */}\r\n    </>\r\n  );\r\n}\r\n\r\n/*-------------------------스크롤 페이징 구현부분 - ------------------*/\r\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,eAAe,SAASC,YAAT,GAAwB;EAAA;;EACrC,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;;EAEA,MAAMS,YAAY,GAAG,MAAM;IACzB,MAAMC,YAAY,GAAGC,QAAQ,CAACC,eAAT,CAAyBF,YAA9C;IACA,MAAMG,SAAS,GAAGF,QAAQ,CAACC,eAAT,CAAyBC,SAA3C;IACA,MAAMC,YAAY,GAAGH,QAAQ,CAACC,eAAT,CAAyBE,YAA9C;IAEAC,OAAO,CAACC,GAAR,CAAY,YAAZ;;IAEA,IAAIH,SAAS,GAAGC,YAAZ,IAA4BJ,YAAhC,EAA8C;MAC5CK,OAAO,CAACC,GAAR,CAAY,iBAAZ;MACAR,OAAO,CAAES,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAP;IACD;EACF,CAXD;;EAaA,MAAMC,qBAAqB,GAAG,YAAY;IACxCH,OAAO,CAACC,GAAR,CAAY,iBAAZ;;IACA,IAAI;MACF;MACA,MAAMG,MAAM,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,qBAAoBb,IAAK,SAApC,EAA8Cc,IAA9C,CAAoDC,GAAD,IAAS;QAC/EP,OAAO,CAACC,GAAR,CAAYM,GAAZ;MACD,CAFoB,CAArB,CAFE,CAKF;IACD,CAND,CAME,MAAM;MACNP,OAAO,CAACQ,KAAR,CAAc,gBAAd;IACD;EACF,CAXD;;EAaAtB,SAAS,CAAC,MAAM;IACdc,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBT,IAAvB;IACAW,qBAAqB;EACtB,CAHQ,EAGN,CAACX,IAAD,CAHM,CAAT;EAKAN,SAAS,CAAC,MAAM;IACduB,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkChB,YAAlC;IACA,OAAO,MAAM;MACXe,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCjB,YAArC;IACD,CAFD;EAGD,CALQ,EAKN,EALM,CAAT;EAOA,oBACE,qCADF;AAOD;AAED;;GAnDwBL,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}