{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactProject\\\\opensales\\\\src\\\\utils\\\\open-sf-utils.js\";\nimport axios from \"axios\"; //날짜 포맷 함수 (필요 없을수도)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function today(argDate, type) {\n  let currentDate = new Date(argDate); //년도\n\n  let year = currentDate.getFullYear(); //월\n\n  let month = currentDate.getMonth() + 1 > 9 ? currentDate.getMonth() + 1 : \"0\" + (currentDate.getMonth() + 1); //일\n\n  let day = currentDate.getDate() > 9 ? currentDate.getDate() : \"0\" + currentDate.getDate(); // 현재날짜  년도 + 월 + 일\n\n  let today = \"\"; // type 1 : 년,월,일\n  // type 2 : -(대시) 출력\n\n  if (type === \"1\") {\n    today = year + \"년 \" + month + \"월 \" + day + \"일\";\n  } else if (type === \"2\") {\n    today = year + \"-\" + month + \"-\" + day;\n  }\n\n  return today;\n} //로그인 한 유저의 SessionAttribute를 가져오는 함수\n\nexport function getUserSession() {\n  let url = \"/userinfo\";\n  let result = [];\n  axios.get(url, {}).then(res => {\n    res.data.password = \"\";\n    result.push(res);\n  });\n  return {\n    userInfo: result\n  };\n} //사용자의 정보를 가져옵니다.\n\nexport function getUserInfo(state, userId) {\n  let url = \"/user/info/\" + userId;\n  let result = [];\n  axios.get(url, {}).then(res => {\n    result.push(res);\n    state.setState({\n      userPictureInfo: result\n    });\n    console.log(res);\n  });\n  return result;\n} // 로그인  리다이렉트\n// export function navigate () useNavigate();\n\nexport function pageError() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC815\\uC0C1\\uC801\\uC778 \\uC811\\uADFC\\uC774 \\uC544\\uB2D9\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"1.\\uC11C\\uBC84\\uAC00 \\uB3D9\\uC791 \\uD558\\uC9C0 \\uC54A\\uC744 \\uC218\\uB3C4 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"2.\\uB85C\\uADF8\\uC778 \\uB418\\uC5B4 \\uC788\\uC9C0 \\uC54A\\uC744 \\uC218\\uB3C4 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["axios","today","argDate","type","currentDate","Date","year","getFullYear","month","getMonth","day","getDate","getUserSession","url","result","get","then","res","data","password","push","userInfo","getUserInfo","state","userId","setState","userPictureInfo","console","log","pageError"],"sources":["D:/reactProject/opensales/src/utils/open-sf-utils.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n//날짜 포맷 함수 (필요 없을수도)\r\nexport function today(argDate, type) {\r\n  let currentDate = new Date(argDate);\r\n  //년도\r\n  let year = currentDate.getFullYear();\r\n\r\n  //월\r\n  let month =\r\n    currentDate.getMonth() + 1 > 9\r\n      ? currentDate.getMonth() + 1\r\n      : \"0\" + (currentDate.getMonth() + 1);\r\n  //일\r\n  let day =\r\n    currentDate.getDate() > 9\r\n      ? currentDate.getDate()\r\n      : \"0\" + currentDate.getDate();\r\n\r\n  // 현재날짜  년도 + 월 + 일\r\n  let today = \"\";\r\n  // type 1 : 년,월,일\r\n  // type 2 : -(대시) 출력\r\n  if (type === \"1\") {\r\n    today = year + \"년 \" + month + \"월 \" + day + \"일\";\r\n  } else if (type === \"2\") {\r\n    today = year + \"-\" + month + \"-\" + day;\r\n  }\r\n  return today;\r\n}\r\n\r\n//로그인 한 유저의 SessionAttribute를 가져오는 함수\r\nexport function getUserSession() {\r\n  let url = \"/userinfo\";\r\n  let result = [];\r\n  axios.get(url, {}).then((res) => {\r\n    res.data.password = \"\";\r\n    result.push(res);\r\n  });\r\n  return { userInfo: result };\r\n}\r\n\r\n//사용자의 정보를 가져옵니다.\r\nexport function getUserInfo(state, userId) {\r\n  let url = \"/user/info/\" + userId;\r\n  let result = [];\r\n  axios.get(url, {}).then((res) => {\r\n    result.push(res);\r\n    state.setState({ userPictureInfo: result });\r\n    console.log(res);\r\n  });\r\n  return result;\r\n}\r\n// 로그인  리다이렉트\r\n// export function navigate () useNavigate();\r\nexport function pageError() {\r\n  return (\r\n    <div>\r\n      <h1>Error</h1>\r\n      <h1>정상적인 접근이 아닙니다.</h1>\r\n      <div>1.서버가 동작 하지 않을 수도 있습니다.</div>\r\n      <div>2.로그인 되어 있지 않을 수도 있습니다.</div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;;AACA,OAAO,SAASC,KAAT,CAAeC,OAAf,EAAwBC,IAAxB,EAA8B;EACnC,IAAIC,WAAW,GAAG,IAAIC,IAAJ,CAASH,OAAT,CAAlB,CADmC,CAEnC;;EACA,IAAII,IAAI,GAAGF,WAAW,CAACG,WAAZ,EAAX,CAHmC,CAKnC;;EACA,IAAIC,KAAK,GACPJ,WAAW,CAACK,QAAZ,KAAyB,CAAzB,GAA6B,CAA7B,GACIL,WAAW,CAACK,QAAZ,KAAyB,CAD7B,GAEI,OAAOL,WAAW,CAACK,QAAZ,KAAyB,CAAhC,CAHN,CANmC,CAUnC;;EACA,IAAIC,GAAG,GACLN,WAAW,CAACO,OAAZ,KAAwB,CAAxB,GACIP,WAAW,CAACO,OAAZ,EADJ,GAEI,MAAMP,WAAW,CAACO,OAAZ,EAHZ,CAXmC,CAgBnC;;EACA,IAAIV,KAAK,GAAG,EAAZ,CAjBmC,CAkBnC;EACA;;EACA,IAAIE,IAAI,KAAK,GAAb,EAAkB;IAChBF,KAAK,GAAGK,IAAI,GAAG,IAAP,GAAcE,KAAd,GAAsB,IAAtB,GAA6BE,GAA7B,GAAmC,GAA3C;EACD,CAFD,MAEO,IAAIP,IAAI,KAAK,GAAb,EAAkB;IACvBF,KAAK,GAAGK,IAAI,GAAG,GAAP,GAAaE,KAAb,GAAqB,GAArB,GAA2BE,GAAnC;EACD;;EACD,OAAOT,KAAP;AACD,C,CAED;;AACA,OAAO,SAASW,cAAT,GAA0B;EAC/B,IAAIC,GAAG,GAAG,WAAV;EACA,IAAIC,MAAM,GAAG,EAAb;EACAd,KAAK,CAACe,GAAN,CAAUF,GAAV,EAAe,EAAf,EAAmBG,IAAnB,CAAyBC,GAAD,IAAS;IAC/BA,GAAG,CAACC,IAAJ,CAASC,QAAT,GAAoB,EAApB;IACAL,MAAM,CAACM,IAAP,CAAYH,GAAZ;EACD,CAHD;EAIA,OAAO;IAAEI,QAAQ,EAAEP;EAAZ,CAAP;AACD,C,CAED;;AACA,OAAO,SAASQ,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;EACzC,IAAIX,GAAG,GAAG,gBAAgBW,MAA1B;EACA,IAAIV,MAAM,GAAG,EAAb;EACAd,KAAK,CAACe,GAAN,CAAUF,GAAV,EAAe,EAAf,EAAmBG,IAAnB,CAAyBC,GAAD,IAAS;IAC/BH,MAAM,CAACM,IAAP,CAAYH,GAAZ;IACAM,KAAK,CAACE,QAAN,CAAe;MAAEC,eAAe,EAAEZ;IAAnB,CAAf;IACAa,OAAO,CAACC,GAAR,CAAYX,GAAZ;EACD,CAJD;EAKA,OAAOH,MAAP;AACD,C,CACD;AACA;;AACA,OAAO,SAASe,SAAT,GAAqB;EAC1B,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD"},"metadata":{},"sourceType":"module"}