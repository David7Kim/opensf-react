{"ast":null,"code":"import axios from\"axios\";//날짜 포맷 함수 (필요 없을수도)\nexport function today(argDate,type){var currentDate=new Date(argDate);//년도\nvar year=currentDate.getFullYear();//월\nvar month=currentDate.getMonth()+1>9?currentDate.getMonth()+1:\"0\"+(currentDate.getMonth()+1);//일\nvar day=currentDate.getDate()>9?currentDate.getDate():\"0\"+currentDate.getDate();// 현재날짜  년도 + 월 + 일\nvar today=\"\";// type 1 : 년,월,일\n// type 2 : -(대시) 출력\nif(type===\"1\"){today=year+\"년 \"+month+\"월 \"+day+\"일\";}else if(type===\"2\"){today=year+\"-\"+month+\"-\"+day;}return today;}//로그인 한 유저의 SessionAttribute를 가져오는 함수\nexport function getUserSession(){var url=\"/userinfo\";var result=[];axios.get(url,{}).then(function(res){res.data.password=\"\";result.push(res);});return{userInfo:result};}//사용자의 정보를 가져옵니다.\nexport function getUserInfo(state,userId){var url=\"/user/info/\"+userId;var result=[];axios.get(url,{}).then(function(res){result.push(res);state.setState({userPictureInfo:result});});// return result;\n}","map":{"version":3,"names":["axios","today","argDate","type","currentDate","Date","year","getFullYear","month","getMonth","day","getDate","getUserSession","url","result","get","then","res","data","password","push","userInfo","getUserInfo","state","userId","setState","userPictureInfo"],"sources":["D:/reactProject/opensales/src/utils/open-sf-utils.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n//날짜 포맷 함수 (필요 없을수도)\r\nexport function today(argDate, type) {\r\n  let currentDate = new Date(argDate);\r\n  //년도\r\n  let year = currentDate.getFullYear();\r\n\r\n  //월\r\n  let month = currentDate.getMonth() + 1 > 9 ? currentDate.getMonth() + 1 : \"0\" + (currentDate.getMonth() + 1);\r\n  //일\r\n  let day = currentDate.getDate() > 9 ? currentDate.getDate() : \"0\" + currentDate.getDate();\r\n\r\n  // 현재날짜  년도 + 월 + 일\r\n  let today = \"\";\r\n  // type 1 : 년,월,일\r\n  // type 2 : -(대시) 출력\r\n  if (type === \"1\") {\r\n    today = year + \"년 \" + month + \"월 \" + day + \"일\";\r\n  } else if (type === \"2\") {\r\n    today = year + \"-\" + month + \"-\" + day;\r\n  }\r\n  return today;\r\n}\r\n\r\n//로그인 한 유저의 SessionAttribute를 가져오는 함수\r\nexport function getUserSession() {\r\n  let url = \"/userinfo\";\r\n  let result = [];\r\n  axios.get(url, {}).then((res) => {\r\n    res.data.password = \"\";\r\n    result.push(res);\r\n  });\r\n  return { userInfo: result };\r\n}\r\n\r\n//사용자의 정보를 가져옵니다.\r\nexport function getUserInfo(state, userId) {\r\n  let url = \"/user/info/\" + userId;\r\n  let result = [];\r\n  axios.get(url, {}).then((res) => {\r\n    result.push(res);\r\n    state.setState({ userPictureInfo: result });\r\n  });\r\n  // return result;\r\n}\r\n"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CAEA;AACA,MAAO,SAASC,MAAT,CAAeC,OAAf,CAAwBC,IAAxB,CAA8B,CACnC,GAAIC,YAAW,CAAG,GAAIC,KAAJ,CAASH,OAAT,CAAlB,CACA;AACA,GAAII,KAAI,CAAGF,WAAW,CAACG,WAAZ,EAAX,CAEA;AACA,GAAIC,MAAK,CAAGJ,WAAW,CAACK,QAAZ,GAAyB,CAAzB,CAA6B,CAA7B,CAAiCL,WAAW,CAACK,QAAZ,GAAyB,CAA1D,CAA8D,KAAOL,WAAW,CAACK,QAAZ,GAAyB,CAAhC,CAA1E,CACA;AACA,GAAIC,IAAG,CAAGN,WAAW,CAACO,OAAZ,GAAwB,CAAxB,CAA4BP,WAAW,CAACO,OAAZ,EAA5B,CAAoD,IAAMP,WAAW,CAACO,OAAZ,EAApE,CAEA;AACA,GAAIV,MAAK,CAAG,EAAZ,CACA;AACA;AACA,GAAIE,IAAI,GAAK,GAAb,CAAkB,CAChBF,KAAK,CAAGK,IAAI,CAAG,IAAP,CAAcE,KAAd,CAAsB,IAAtB,CAA6BE,GAA7B,CAAmC,GAA3C,CACD,CAFD,IAEO,IAAIP,IAAI,GAAK,GAAb,CAAkB,CACvBF,KAAK,CAAGK,IAAI,CAAG,GAAP,CAAaE,KAAb,CAAqB,GAArB,CAA2BE,GAAnC,CACD,CACD,MAAOT,MAAP,CACD,CAED;AACA,MAAO,SAASW,eAAT,EAA0B,CAC/B,GAAIC,IAAG,CAAG,WAAV,CACA,GAAIC,OAAM,CAAG,EAAb,CACAd,KAAK,CAACe,GAAN,CAAUF,GAAV,CAAe,EAAf,EAAmBG,IAAnB,CAAwB,SAACC,GAAD,CAAS,CAC/BA,GAAG,CAACC,IAAJ,CAASC,QAAT,CAAoB,EAApB,CACAL,MAAM,CAACM,IAAP,CAAYH,GAAZ,EACD,CAHD,EAIA,MAAO,CAAEI,QAAQ,CAAEP,MAAZ,CAAP,CACD,CAED;AACA,MAAO,SAASQ,YAAT,CAAqBC,KAArB,CAA4BC,MAA5B,CAAoC,CACzC,GAAIX,IAAG,CAAG,cAAgBW,MAA1B,CACA,GAAIV,OAAM,CAAG,EAAb,CACAd,KAAK,CAACe,GAAN,CAAUF,GAAV,CAAe,EAAf,EAAmBG,IAAnB,CAAwB,SAACC,GAAD,CAAS,CAC/BH,MAAM,CAACM,IAAP,CAAYH,GAAZ,EACAM,KAAK,CAACE,QAAN,CAAe,CAAEC,eAAe,CAAEZ,MAAnB,CAAf,EACD,CAHD,EAIA;AACD"},"metadata":{},"sourceType":"module"}