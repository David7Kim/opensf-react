{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactProject\\\\opensales\\\\src\\\\board\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useInView } from \"react-intersection-observer\";\nimport PostList from \"./PostList\";\nimport axios from \"axios\";\nimport BoardHeader from \"../board/BoardHeader\";\nimport BoardAddPop from \"./BoardAddPop\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BoardMain() {\n  _s();\n\n  let defaultSettings = {\n    title: \"게시판\"\n  }; //Navigate , postList , addPopState 선언\n\n  const navigate = useNavigate();\n  const [postList, setPostList] = useState([]);\n  const [addPopState, setAddPopState] = useState(false); // const [lastIntersectingImage, setLastIntersectingImage] = useState < HTMLDivElement > null;\n\n  const [loading, setLoading] = useState(false);\n  const [ref, inView] = useInView();\n  const [page, setPage] = useState(0); //스크롤 pagination 함수\n\n  const handleScroll = () => {\n    const scrollHeight = document.documentElement.scrollHeight;\n    const scrollTop = document.documentElement.scrollTop;\n    const clientHeight = document.documentElement.clientHeight;\n    console.log(\"스크롤 이벤트 발생\");\n    console.log(\"스크롤 높이 :-------\", scrollHeight, \"------- -------\");\n    console.log(\"사용자 높이\", clientHeight);\n\n    if (scrollTop + clientHeight >= scrollHeight) {\n      console.log(\"페이지 끝에 스크롤이 닿았음\");\n      setPage(prev => prev + 1);\n    }\n  }; // //observer\n  // const onIntersect = (entries, observer) => {\n  //   entries.forEach((entry) => {\n  //     if (entry.isIntersecting) {\n  //       //뷰포트에 마지막 이미지가 들어오고, page값에 1을 더하여 새 fetch 요청을 보내게됨 (useEffect의 dependency배열에 page가 있음)\n  //       setPage((prev) => prev + 1);\n  //       // 현재 타겟을 unobserve한다.\n  //       observer.unobserve(entry.target);\n  //     }\n  //   });\n  // };\n  //게시글 가져오는 함수 (페이징 적용한 메소드)\n\n\n  const getPostdata = useCallback(async () => {\n    console.log(\"fetching 함수 호출됨\"); //try {\n\n    await axios.get(`chatter/post?page=${page}&size=5`).then(res => {\n      console.log(res);\n      setPostList(prevState => [...prevState, res.data.content]);\n    }); //} catch {\n    // console.error(\"fetching error\");\n    //}\n  }, [page]); //게시글 가져오기 (BoardId는 추후에 제거할 예정)\n  // const getPost = () => {\n  //   //axios.get(\"post/1\").then((res) => {\n  //   axios.get(\"chatter/post\").then((res) => {\n  //     //setPostList(res.data);\n  //     setPostList(res.data.content);\n  //   });\n  // };\n  //useEffect(getPostdata, []);\n\n  useEffect(() => {\n    getPostdata();\n  }, [getPostdata]);\n  useEffect(() => {\n    //   window.addEventListener(\"scroll\", handleScroll);\n    //   return () => {\n    //     window.removeEventListener(\"scroll\", handleScroll);\n    //   };\n    // }, []);\n    if (inView && !loading) {\n      setPage(prevState => prevState + 1);\n    }\n  }, [inView, loading]); //게시글 자세히 보기\n\n  const getSeePostDetail = e => {\n    console.log(\"postid is \", e.currentTarget.getAttribute(\"data-postid\"));\n    navigate(\"/post/detail/view\", {\n      state: e.currentTarget.getAttribute(\"data-postid\")\n    });\n  }; //이전으로 돌아가기\n\n\n  const goBack = () => {\n    navigate(\"/home\");\n  }; //게시글 등록 팝업 open\n\n\n  const addPost = () => {\n    setAddPopState(true);\n  }; //게시글 등록 팝업 close\n\n\n  const closePost = () => {\n    setAddPopState(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [addPopState === true && /*#__PURE__*/_jsxDEV(BoardAddPop, {\n      leftFunc: closePost,\n      rightFunc: closePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board_box\",\n      children: [addPopState === false && /*#__PURE__*/_jsxDEV(BoardHeader, {\n        leftFunc: goBack,\n        rightFunc: addPost,\n        title: defaultSettings.title,\n        option: true,\n        className: \"board_header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board_contents\",\n        children: /*#__PURE__*/_jsxDEV(PostList, {\n          postList: postList,\n          seedetial: getSeePostDetail\n          /** 게시글 상세보기시 goBack기능을 넣으려고 하는것 같음? */\n          ,\n          goBack: goBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BoardMain, \"wrUgJXYmZy+J7065C58cU/YwUPo=\", false, function () {\n  return [useNavigate, useInView];\n});\n\n_c = BoardMain;\nexport default BoardMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardMain\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useInView","PostList","axios","BoardHeader","BoardAddPop","BoardMain","defaultSettings","title","navigate","postList","setPostList","addPopState","setAddPopState","loading","setLoading","ref","inView","page","setPage","handleScroll","scrollHeight","document","documentElement","scrollTop","clientHeight","console","log","prev","getPostdata","get","then","res","prevState","data","content","getSeePostDetail","e","currentTarget","getAttribute","state","goBack","addPost","closePost"],"sources":["D:/reactProject/opensales/src/board/Board.js"],"sourcesContent":["import { React, useState, useEffect, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport PostList from \"./PostList\";\r\nimport axios from \"axios\";\r\nimport BoardHeader from \"../board/BoardHeader\";\r\nimport BoardAddPop from \"./BoardAddPop\";\r\n\r\nfunction BoardMain() {\r\n  let defaultSettings = {\r\n    title: \"게시판\",\r\n  };\r\n  //Navigate , postList , addPopState 선언\r\n  const navigate = useNavigate();\r\n  const [postList, setPostList] = useState([]);\r\n  const [addPopState, setAddPopState] = useState(false);\r\n  // const [lastIntersectingImage, setLastIntersectingImage] = useState < HTMLDivElement > null;\r\n  const [loading, setLoading] = useState(false);\r\n  const [ref, inView] = useInView();\r\n  const [page, setPage] = useState(0);\r\n\r\n  //스크롤 pagination 함수\r\n  const handleScroll = () => {\r\n    const scrollHeight = document.documentElement.scrollHeight;\r\n    const scrollTop = document.documentElement.scrollTop;\r\n    const clientHeight = document.documentElement.clientHeight;\r\n\r\n    console.log(\"스크롤 이벤트 발생\");\r\n    console.log(\"스크롤 높이 :-------\", scrollHeight, \"------- -------\");\r\n    console.log(\"사용자 높이\", clientHeight);\r\n\r\n    if (scrollTop + clientHeight >= scrollHeight) {\r\n      console.log(\"페이지 끝에 스크롤이 닿았음\");\r\n      setPage((prev) => prev + 1);\r\n    }\r\n  };\r\n  // //observer\r\n  // const onIntersect = (entries, observer) => {\r\n  //   entries.forEach((entry) => {\r\n  //     if (entry.isIntersecting) {\r\n  //       //뷰포트에 마지막 이미지가 들어오고, page값에 1을 더하여 새 fetch 요청을 보내게됨 (useEffect의 dependency배열에 page가 있음)\r\n  //       setPage((prev) => prev + 1);\r\n  //       // 현재 타겟을 unobserve한다.\r\n  //       observer.unobserve(entry.target);\r\n  //     }\r\n  //   });\r\n  // };\r\n  //게시글 가져오는 함수 (페이징 적용한 메소드)\r\n  const getPostdata = useCallback(async () => {\r\n    console.log(\"fetching 함수 호출됨\");\r\n    //try {\r\n    await axios.get(`chatter/post?page=${page}&size=5`).then((res) => {\r\n      console.log(res);\r\n      setPostList((prevState) => [...prevState, res.data.content]);\r\n    });\r\n    //} catch {\r\n    // console.error(\"fetching error\");\r\n    //}\r\n  }, [page]);\r\n\r\n  //게시글 가져오기 (BoardId는 추후에 제거할 예정)\r\n  // const getPost = () => {\r\n  //   //axios.get(\"post/1\").then((res) => {\r\n  //   axios.get(\"chatter/post\").then((res) => {\r\n  //     //setPostList(res.data);\r\n  //     setPostList(res.data.content);\r\n  //   });\r\n  // };\r\n\r\n  //useEffect(getPostdata, []);\r\n  useEffect(() => {\r\n    getPostdata();\r\n  }, [getPostdata]);\r\n\r\n  useEffect(() => {\r\n    //   window.addEventListener(\"scroll\", handleScroll);\r\n    //   return () => {\r\n    //     window.removeEventListener(\"scroll\", handleScroll);\r\n    //   };\r\n    // }, []);\r\n    if (inView && !loading) {\r\n      setPage((prevState) => prevState + 1);\r\n    }\r\n  }, [inView, loading]);\r\n\r\n  //게시글 자세히 보기\r\n  const getSeePostDetail = (e) => {\r\n    console.log(\"postid is \", e.currentTarget.getAttribute(\"data-postid\"));\r\n    navigate(\"/post/detail/view\", {\r\n      state: e.currentTarget.getAttribute(\"data-postid\"),\r\n    });\r\n  };\r\n  //이전으로 돌아가기\r\n  const goBack = () => {\r\n    navigate(\"/home\");\r\n  };\r\n\r\n  //게시글 등록 팝업 open\r\n  const addPost = () => {\r\n    setAddPopState(true);\r\n  };\r\n  //게시글 등록 팝업 close\r\n  const closePost = () => {\r\n    setAddPopState(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {addPopState === true && <BoardAddPop leftFunc={closePost} rightFunc={closePost} />}\r\n      <div className=\"board_box\">\r\n        {addPopState === false && (\r\n          <BoardHeader leftFunc={goBack} rightFunc={addPost} title={defaultSettings.title} option={true} className={\"board_header\"} />\r\n        )}\r\n        <div className=\"board_contents\">\r\n          <PostList\r\n            postList={postList}\r\n            seedetial={getSeePostDetail}\r\n            /** 게시글 상세보기시 goBack기능을 넣으려고 하는것 같음? */\r\n            goBack={goBack}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default BoardMain;\r\n"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,SAAT,GAAqB;EAAA;;EACnB,IAAIC,eAAe,GAAG;IACpBC,KAAK,EAAE;EADa,CAAtB,CADmB,CAInB;;EACA,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;EACA,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,KAAD,CAA9C,CAPmB,CAQnB;;EACA,MAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACmB,GAAD,EAAMC,MAAN,IAAgBhB,SAAS,EAA/B;EACA,MAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,CAAD,CAAhC,CAXmB,CAanB;;EACA,MAAMuB,YAAY,GAAG,MAAM;IACzB,MAAMC,YAAY,GAAGC,QAAQ,CAACC,eAAT,CAAyBF,YAA9C;IACA,MAAMG,SAAS,GAAGF,QAAQ,CAACC,eAAT,CAAyBC,SAA3C;IACA,MAAMC,YAAY,GAAGH,QAAQ,CAACC,eAAT,CAAyBE,YAA9C;IAEAC,OAAO,CAACC,GAAR,CAAY,YAAZ;IACAD,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BN,YAA/B,EAA6C,iBAA7C;IACAK,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,YAAtB;;IAEA,IAAID,SAAS,GAAGC,YAAZ,IAA4BJ,YAAhC,EAA8C;MAC5CK,OAAO,CAACC,GAAR,CAAY,iBAAZ;MACAR,OAAO,CAAES,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAP;IACD;EACF,CAbD,CAdmB,CA4BnB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,MAAMC,WAAW,GAAG9B,WAAW,CAAC,YAAY;IAC1C2B,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAD0C,CAE1C;;IACA,MAAMxB,KAAK,CAAC2B,GAAN,CAAW,qBAAoBZ,IAAK,SAApC,EAA8Ca,IAA9C,CAAoDC,GAAD,IAAS;MAChEN,OAAO,CAACC,GAAR,CAAYK,GAAZ;MACArB,WAAW,CAAEsB,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeD,GAAG,CAACE,IAAJ,CAASC,OAAxB,CAAhB,CAAX;IACD,CAHK,CAAN,CAH0C,CAO1C;IACA;IACA;EACD,CAV8B,EAU5B,CAACjB,IAAD,CAV4B,CAA/B,CAxCmB,CAoDnB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;EACApB,SAAS,CAAC,MAAM;IACd+B,WAAW;EACZ,CAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;EAIA/B,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACA;IACA,IAAImB,MAAM,IAAI,CAACH,OAAf,EAAwB;MACtBK,OAAO,CAAEc,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAP;IACD;EACF,CATQ,EASN,CAAChB,MAAD,EAASH,OAAT,CATM,CAAT,CAlEmB,CA6EnB;;EACA,MAAMsB,gBAAgB,GAAIC,CAAD,IAAO;IAC9BX,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BU,CAAC,CAACC,aAAF,CAAgBC,YAAhB,CAA6B,aAA7B,CAA1B;IACA9B,QAAQ,CAAC,mBAAD,EAAsB;MAC5B+B,KAAK,EAAEH,CAAC,CAACC,aAAF,CAAgBC,YAAhB,CAA6B,aAA7B;IADqB,CAAtB,CAAR;EAGD,CALD,CA9EmB,CAoFnB;;;EACA,MAAME,MAAM,GAAG,MAAM;IACnBhC,QAAQ,CAAC,OAAD,CAAR;EACD,CAFD,CArFmB,CAyFnB;;;EACA,MAAMiC,OAAO,GAAG,MAAM;IACpB7B,cAAc,CAAC,IAAD,CAAd;EACD,CAFD,CA1FmB,CA6FnB;;;EACA,MAAM8B,SAAS,GAAG,MAAM;IACtB9B,cAAc,CAAC,KAAD,CAAd;EACD,CAFD;;EAIA,oBACE;IAAA,WACGD,WAAW,KAAK,IAAhB,iBAAwB,QAAC,WAAD;MAAa,QAAQ,EAAE+B,SAAvB;MAAkC,SAAS,EAAEA;IAA7C;MAAA;MAAA;MAAA;IAAA,QAD3B,eAEE;MAAK,SAAS,EAAC,WAAf;MAAA,WACG/B,WAAW,KAAK,KAAhB,iBACC,QAAC,WAAD;QAAa,QAAQ,EAAE6B,MAAvB;QAA+B,SAAS,EAAEC,OAA1C;QAAmD,KAAK,EAAEnC,eAAe,CAACC,KAA1E;QAAiF,MAAM,EAAE,IAAzF;QAA+F,SAAS,EAAE;MAA1G;QAAA;QAAA;QAAA;MAAA,QAFJ,eAIE;QAAK,SAAS,EAAC,gBAAf;QAAA,uBACE,QAAC,QAAD;UACE,QAAQ,EAAEE,QADZ;UAEE,SAAS,EAAE0B;UACX;UAHF;UAIE,MAAM,EAAEK;QAJV;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD;;GApHQnC,S;UAKUN,W,EAKKC,S;;;KAVfK,S;AAqHT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}