{"ast":null,"code":"import _slicedToArray from\"D:/reactProject/opensales/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function UpdateProfile(userInfo){//각 input 등의 값을 state에 저장한다.\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),firstnm=_useState2[0],setfirstnm=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),lastnm=_useState4[0],setlastnm=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),email=_useState6[0],setemail=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),id=_useState8[0],setid=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),password=_useState10[0],setpassword=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),confirmpw=_useState12[0],setconfirmpw=_useState12[1];//계정 만들기후 Navigate\nvar navigate=useNavigate(\"\");//input의 State를 변경하는 함수 생성\nvar onEmail=function onEmail(e){setemail(e.currentTarget.value);};var onPassword=function onPassword(e){setpassword(e.currentTarget.value);};var onConfirmpw=function onConfirmpw(e){setconfirmpw(e.currentTarget.value);};//Submit 시 Validate check 함수 (수정 필요 작동 안됨)\nvar validate=function validate(){var result=true;if(password!==confirmpw){result=false;return result;}else{alert(\"비밀번호가 같지 않습니다.\");return result;}};//계정 Insert(create) 함수\nvar updateUserAccount=function updateUserAccount(){//axios를 이용하여 api 호출\n// let validateKey = validate();\n// if (validateKey) {\naxios({url:\"regist/account\",headers:{\"Content-Type\":\"application/json\"// \"Access-Control-Allow-Credentials\": true,\n},withCredentials:true,method:\"POST\",//데이터는 추후에 변경 작업 (임시값 세팅)\ndata:{userid:userInfo.id,email:email,password:password}})//계정 생성 성공 , 실패 조건\n.then(function(res){console.log(res);if(res.data===\"SUCESS\"){console.log(\"계정 생성에 성공 하였습니다.\");navigate();}else{console.log(\"계정 생성에 실패 하였습니다.\");}}).catch(function(err){console.log(err);});// }\n};return/*#__PURE__*/_jsx(\"div\",{className:\"signup_parent_box\",children:/*#__PURE__*/_jsx(\"div\",{className:\"signup_box\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"signup_box_tw\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"signup_title\",children:\"\\uD504\\uB85C\\uD544 \\uC218\\uC815\"}),/*#__PURE__*/_jsx(\"div\",{className:\"signup_input\",children:/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"signup_name\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uC131\",readOnly:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uC774\\uB984\",readOnly:true})]}),/*#__PURE__*/_jsx(\"div\",{className:\"signup_email\",children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"\\uC774\\uBA54\\uC77C\",onChange:onEmail})}),/*#__PURE__*/_jsx(\"div\",{className:\"signup_id\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uC544\\uC774\\uB514\",readOnly:true})}),/*#__PURE__*/_jsx(\"div\",{className:\"signup_password\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\uD328\\uC2A4\\uC6CC\\uB4DC\",onChange:onPassword})}),/*#__PURE__*/_jsx(\"div\",{className:\"signup_confirm_pw\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\uD328\\uC2A4\\uC6CC\\uB4DC \\uD655\\uC778\",onChange:onConfirmpw})}),/*#__PURE__*/_jsx(\"div\",{className:\"signup_btn\",children:/*#__PURE__*/_jsx(\"input\",{type:\"button\",value:\"\\uC218\\uC815\",onClick:updateUserAccount})})]})})]})})});}export default UpdateProfile;","map":{"version":3,"names":["useState","useNavigate","axios","UpdateProfile","userInfo","firstnm","setfirstnm","lastnm","setlastnm","email","setemail","id","setid","password","setpassword","confirmpw","setconfirmpw","navigate","onEmail","e","currentTarget","value","onPassword","onConfirmpw","validate","result","alert","updateUserAccount","url","headers","withCredentials","method","data","userid","then","res","console","log","catch","err"],"sources":["D:/reactProject/opensales/src/login/Setting.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nfunction UpdateProfile(userInfo) {\r\n  //각 input 등의 값을 state에 저장한다.\r\n  const [firstnm, setfirstnm] = useState(\"\");\r\n  const [lastnm, setlastnm] = useState(\"\");\r\n  const [email, setemail] = useState(\"\");\r\n  const [id, setid] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [confirmpw, setconfirmpw] = useState(\"\");\r\n\r\n  //계정 만들기후 Navigate\r\n  const navigate = useNavigate(\"\");\r\n\r\n  //input의 State를 변경하는 함수 생성\r\n\r\n  const onEmail = (e) => {\r\n    setemail(e.currentTarget.value);\r\n  };\r\n  const onPassword = (e) => {\r\n    setpassword(e.currentTarget.value);\r\n  };\r\n  const onConfirmpw = (e) => {\r\n    setconfirmpw(e.currentTarget.value);\r\n  };\r\n  //Submit 시 Validate check 함수 (수정 필요 작동 안됨)\r\n  const validate = () => {\r\n    let result = true;\r\n    if (password !== confirmpw) {\r\n      result = false;\r\n      return result;\r\n    } else {\r\n      alert(\"비밀번호가 같지 않습니다.\");\r\n      return result;\r\n    }\r\n  };\r\n  //계정 Insert(create) 함수\r\n  const updateUserAccount = () => {\r\n    //axios를 이용하여 api 호출\r\n    // let validateKey = validate();\r\n\r\n    // if (validateKey) {\r\n    axios({\r\n      url: \"regist/account\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // \"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      withCredentials: true,\r\n      method: \"POST\",\r\n      //데이터는 추후에 변경 작업 (임시값 세팅)\r\n      data: {\r\n        userid: userInfo.id,\r\n        email: email,\r\n        password: password,\r\n      },\r\n    })\r\n      //계정 생성 성공 , 실패 조건\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data === \"SUCESS\") {\r\n          console.log(\"계정 생성에 성공 하였습니다.\");\r\n          navigate();\r\n        } else {\r\n          console.log(\"계정 생성에 실패 하였습니다.\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // }\r\n  };\r\n  return (\r\n    <div className=\"signup_parent_box\">\r\n      <div className=\"signup_box\">\r\n        <div className=\"signup_box_tw\">\r\n          <div className=\"signup_title\">프로필 수정</div>\r\n          <div className=\"signup_input\">\r\n            <form>\r\n              <div className=\"signup_name\">\r\n                <input type=\"text\" placeholder=\"성\" readOnly />\r\n                <input type=\"text\" placeholder=\"이름\" readOnly />\r\n              </div>\r\n              <div className=\"signup_email\">\r\n                <input type=\"email\" placeholder=\"이메일\" onChange={onEmail} />\r\n              </div>\r\n              <div className=\"signup_id\">\r\n                <input type=\"text\" placeholder=\"아이디\" readOnly />\r\n              </div>\r\n              <div className=\"signup_password\">\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"패스워드\"\r\n                  onChange={onPassword}\r\n                />\r\n              </div>\r\n              <div className=\"signup_confirm_pw\">\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"패스워드 확인\"\r\n                  onChange={onConfirmpw}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"signup_btn\">\r\n                <input type=\"button\" value=\"수정\" onClick={updateUserAccount} />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"already_account\">이미 계정이 있으신가요?</div> */}\r\n    </div>\r\n  );\r\n}\r\nexport default UpdateProfile;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}