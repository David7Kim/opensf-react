{"ast":null,"code":"import axios from \"axios\"; //날짜 포맷 함수 (필요 없을수도)\n\nexport function today(argDate, type) {\n  let currentDate = new Date(argDate); //년도\n\n  let year = currentDate.getFullYear(); //월\n\n  let month = currentDate.getMonth() + 1 > 9 ? currentDate.getMonth() + 1 : \"0\" + (currentDate.getMonth() + 1); //일\n\n  let day = currentDate.getDate() > 9 ? currentDate.getDate() : \"0\" + currentDate.getDate(); // 현재날짜  년도 + 월 + 일\n\n  let today = \"\"; // type 1 : 년,월,일\n  // type 2 : -(대시) 출력\n\n  if (type === \"1\") {\n    today = year + \"년 \" + month + \"월 \" + day + \"일\";\n  } else if (type === \"2\") {\n    today = year + \"-\" + month + \"-\" + day;\n  }\n\n  return today;\n} //로그인 한 유저의 SessionAttribute를 가져오는 함수\n\nexport function getUserSession() {\n  let url = \"/userinfo\";\n  axios.get(url, {}).then(res => {\n    res.data.password = \"\";\n    return res;\n  });\n} //사용자의 정보를 가져옵니다.\n\nexport function getUserInfo(account) {\n  let url = \"/user/info/account/\" + account;\n  let result = [];\n  axios.get(url, {}).then(res => {\n    result.push(res); // console.log(result);\n  });\n  return result;\n} // 로그인  리다이렉트\n// export function navigate () useNavigate();","map":{"version":3,"names":["axios","today","argDate","type","currentDate","Date","year","getFullYear","month","getMonth","day","getDate","getUserSession","url","get","then","res","data","password","getUserInfo","account","result","push"],"sources":["D:/reactProject/opensales/src/utils/open-sf-utils.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n//날짜 포맷 함수 (필요 없을수도)\r\nexport function today(argDate, type) {\r\n  let currentDate = new Date(argDate);\r\n  //년도\r\n  let year = currentDate.getFullYear();\r\n\r\n  //월\r\n  let month =\r\n    currentDate.getMonth() + 1 > 9\r\n      ? currentDate.getMonth() + 1\r\n      : \"0\" + (currentDate.getMonth() + 1);\r\n  //일\r\n  let day =\r\n    currentDate.getDate() > 9\r\n      ? currentDate.getDate()\r\n      : \"0\" + currentDate.getDate();\r\n\r\n  // 현재날짜  년도 + 월 + 일\r\n  let today = \"\";\r\n  // type 1 : 년,월,일\r\n  // type 2 : -(대시) 출력\r\n  if (type === \"1\") {\r\n    today = year + \"년 \" + month + \"월 \" + day + \"일\";\r\n  } else if (type === \"2\") {\r\n    today = year + \"-\" + month + \"-\" + day;\r\n  }\r\n  return today;\r\n}\r\n\r\n//로그인 한 유저의 SessionAttribute를 가져오는 함수\r\nexport function getUserSession() {\r\n  let url = \"/userinfo\";\r\n  axios.get(url, {}).then((res) => {\r\n    res.data.password = \"\";\r\n\r\n    return res;\r\n  });\r\n}\r\n\r\n//사용자의 정보를 가져옵니다.\r\nexport function getUserInfo(account) {\r\n  let url = \"/user/info/account/\" + account;\r\n  let result = [];\r\n  axios.get(url, {}).then((res) => {\r\n    result.push(res);\r\n    // console.log(result);\r\n  });\r\n  return result;\r\n}\r\n// 로그인  리다이렉트\r\n// export function navigate () useNavigate();\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,SAASC,KAAT,CAAeC,OAAf,EAAwBC,IAAxB,EAA8B;EACnC,IAAIC,WAAW,GAAG,IAAIC,IAAJ,CAASH,OAAT,CAAlB,CADmC,CAEnC;;EACA,IAAII,IAAI,GAAGF,WAAW,CAACG,WAAZ,EAAX,CAHmC,CAKnC;;EACA,IAAIC,KAAK,GACPJ,WAAW,CAACK,QAAZ,KAAyB,CAAzB,GAA6B,CAA7B,GACIL,WAAW,CAACK,QAAZ,KAAyB,CAD7B,GAEI,OAAOL,WAAW,CAACK,QAAZ,KAAyB,CAAhC,CAHN,CANmC,CAUnC;;EACA,IAAIC,GAAG,GACLN,WAAW,CAACO,OAAZ,KAAwB,CAAxB,GACIP,WAAW,CAACO,OAAZ,EADJ,GAEI,MAAMP,WAAW,CAACO,OAAZ,EAHZ,CAXmC,CAgBnC;;EACA,IAAIV,KAAK,GAAG,EAAZ,CAjBmC,CAkBnC;EACA;;EACA,IAAIE,IAAI,KAAK,GAAb,EAAkB;IAChBF,KAAK,GAAGK,IAAI,GAAG,IAAP,GAAcE,KAAd,GAAsB,IAAtB,GAA6BE,GAA7B,GAAmC,GAA3C;EACD,CAFD,MAEO,IAAIP,IAAI,KAAK,GAAb,EAAkB;IACvBF,KAAK,GAAGK,IAAI,GAAG,GAAP,GAAaE,KAAb,GAAqB,GAArB,GAA2BE,GAAnC;EACD;;EACD,OAAOT,KAAP;AACD,C,CAED;;AACA,OAAO,SAASW,cAAT,GAA0B;EAC/B,IAAIC,GAAG,GAAG,WAAV;EACAb,KAAK,CAACc,GAAN,CAAUD,GAAV,EAAe,EAAf,EAAmBE,IAAnB,CAAyBC,GAAD,IAAS;IAC/BA,GAAG,CAACC,IAAJ,CAASC,QAAT,GAAoB,EAApB;IAEA,OAAOF,GAAP;EACD,CAJD;AAKD,C,CAED;;AACA,OAAO,SAASG,WAAT,CAAqBC,OAArB,EAA8B;EACnC,IAAIP,GAAG,GAAG,wBAAwBO,OAAlC;EACA,IAAIC,MAAM,GAAG,EAAb;EACArB,KAAK,CAACc,GAAN,CAAUD,GAAV,EAAe,EAAf,EAAmBE,IAAnB,CAAyBC,GAAD,IAAS;IAC/BK,MAAM,CAACC,IAAP,CAAYN,GAAZ,EAD+B,CAE/B;EACD,CAHD;EAIA,OAAOK,MAAP;AACD,C,CACD;AACA"},"metadata":{},"sourceType":"module"}