{"ast":null,"code":"import axios from\"axios\";import{Link,Redirect,Route,useNavigate}from\"react-router-dom\";//날짜 포맷 함수 (필요 없을수도)\nexport function today(argDate,type){var currentDate=new Date(argDate);//년도\nvar year=currentDate.getFullYear();//월\nvar month=currentDate.getMonth()+1>9?currentDate.getMonth()+1:\"0\"+(currentDate.getMonth()+1);//일\nvar day=currentDate.getDate()>9?currentDate.getDate():\"0\"+currentDate.getDate();// 현재날짜  년도 + 월 + 일\nvar today=\"\";// type 1 : 년,월,일\n// type 2 : -(대시) 출력\nif(type===\"1\"){today=year+\"년 \"+month+\"월 \"+day+\"일\";}else if(type===\"2\"){today=year+\"-\"+month+\"-\"+day;}return today;}//로그인 한 유저의 SessionAttribute를 가져오는 함수\nexport function getUserSession(){var url=\"/userinfo\";var result=\"\";axios.get(url,{}).then(function(res){result=res;console.log(result);return result;});}//Key Event\nexport function onKeyPress(e){if(e.key===\"Enter\"){onclick();}}// 로그인  리다이렉트\n// export function navigate () useNavigate();","map":{"version":3,"names":["axios","Link","Redirect","Route","useNavigate","today","argDate","type","currentDate","Date","year","getFullYear","month","getMonth","day","getDate","getUserSession","url","result","get","then","res","console","log","onKeyPress","e","key","onclick"],"sources":["D:/reactProject/opensales/src/utils/open-sf-utils.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { Link, Redirect, Route, useNavigate } from \"react-router-dom\";\r\n//날짜 포맷 함수 (필요 없을수도)\r\nexport function today(argDate, type) {\r\n  let currentDate = new Date(argDate);\r\n  //년도\r\n  let year = currentDate.getFullYear();\r\n\r\n  //월\r\n  let month =\r\n    currentDate.getMonth() + 1 > 9\r\n      ? currentDate.getMonth() + 1\r\n      : \"0\" + (currentDate.getMonth() + 1);\r\n  //일\r\n  let day =\r\n    currentDate.getDate() > 9\r\n      ? currentDate.getDate()\r\n      : \"0\" + currentDate.getDate();\r\n\r\n  // 현재날짜  년도 + 월 + 일\r\n  let today = \"\";\r\n  // type 1 : 년,월,일\r\n  // type 2 : -(대시) 출력\r\n  if (type === \"1\") {\r\n    today = year + \"년 \" + month + \"월 \" + day + \"일\";\r\n  } else if (type === \"2\") {\r\n    today = year + \"-\" + month + \"-\" + day;\r\n  }\r\n  return today;\r\n}\r\n\r\n//로그인 한 유저의 SessionAttribute를 가져오는 함수\r\nexport function getUserSession() {\r\n  let url = \"/userinfo\";\r\n  let result = \"\";\r\n  axios.get(url, {}).then((res) => {\r\n    result = res;\r\n    console.log(result);\r\n    return result;\r\n  });\r\n}\r\n\r\n//Key Event\r\n\r\nexport function onKeyPress(e) {\r\n  if (e.key === \"Enter\") {\r\n    onclick();\r\n  }\r\n}\r\n\r\n// 로그인  리다이렉트\r\n// export function navigate () useNavigate();\r\n"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,QAAf,CAAyBC,KAAzB,CAAgCC,WAAhC,KAAmD,kBAAnD,CACA;AACA,MAAO,SAASC,MAAT,CAAeC,OAAf,CAAwBC,IAAxB,CAA8B,CACnC,GAAIC,YAAW,CAAG,GAAIC,KAAJ,CAASH,OAAT,CAAlB,CACA;AACA,GAAII,KAAI,CAAGF,WAAW,CAACG,WAAZ,EAAX,CAEA;AACA,GAAIC,MAAK,CACPJ,WAAW,CAACK,QAAZ,GAAyB,CAAzB,CAA6B,CAA7B,CACIL,WAAW,CAACK,QAAZ,GAAyB,CAD7B,CAEI,KAAOL,WAAW,CAACK,QAAZ,GAAyB,CAAhC,CAHN,CAIA;AACA,GAAIC,IAAG,CACLN,WAAW,CAACO,OAAZ,GAAwB,CAAxB,CACIP,WAAW,CAACO,OAAZ,EADJ,CAEI,IAAMP,WAAW,CAACO,OAAZ,EAHZ,CAKA;AACA,GAAIV,MAAK,CAAG,EAAZ,CACA;AACA;AACA,GAAIE,IAAI,GAAK,GAAb,CAAkB,CAChBF,KAAK,CAAGK,IAAI,CAAG,IAAP,CAAcE,KAAd,CAAsB,IAAtB,CAA6BE,GAA7B,CAAmC,GAA3C,CACD,CAFD,IAEO,IAAIP,IAAI,GAAK,GAAb,CAAkB,CACvBF,KAAK,CAAGK,IAAI,CAAG,GAAP,CAAaE,KAAb,CAAqB,GAArB,CAA2BE,GAAnC,CACD,CACD,MAAOT,MAAP,CACD,CAED;AACA,MAAO,SAASW,eAAT,EAA0B,CAC/B,GAAIC,IAAG,CAAG,WAAV,CACA,GAAIC,OAAM,CAAG,EAAb,CACAlB,KAAK,CAACmB,GAAN,CAAUF,GAAV,CAAe,EAAf,EAAmBG,IAAnB,CAAwB,SAACC,GAAD,CAAS,CAC/BH,MAAM,CAAGG,GAAT,CACAC,OAAO,CAACC,GAAR,CAAYL,MAAZ,EACA,MAAOA,OAAP,CACD,CAJD,EAKD,CAED;AAEA,MAAO,SAASM,WAAT,CAAoBC,CAApB,CAAuB,CAC5B,GAAIA,CAAC,CAACC,GAAF,GAAU,OAAd,CAAuB,CACrBC,OAAO,GACR,CACF,CAED;AACA"},"metadata":{},"sourceType":"module"}