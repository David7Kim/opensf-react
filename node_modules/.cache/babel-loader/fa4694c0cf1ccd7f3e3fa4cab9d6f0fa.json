{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactProject\\\\opensales\\\\src\\\\calendar\\\\Calendarcopy.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport Header from \"./Header\";\nimport \"./Calendar.css\";\nimport moment from \"moment\";\nimport { render } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DateHeader extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.dateToArray = dates => {\n      if (Array.isArray(dates)) {\n        return dates;\n      } else if (typeof dates === \"string\") {\n        return dates.split(\",\");\n      } else {\n        return [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n      }\n    };\n\n    this.mapArrayToDate = dateArray => {\n      try {\n        if (dateArray.length !== 7) {\n          console.log(new Error(\"dates props must be had 7 date\"));\n          dateArray = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n        }\n\n        return dateArray.map((date, index) => {\n          const className = () => {\n            let className = \"RCA-calendar-date-component\";\n\n            if (index === 0) {\n              return className + \" date-sun\";\n            } else if (index === 6) {\n              return className + \" date-sat\";\n            } else {\n              return className + \" date-weekday\";\n            }\n          };\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: className(),\n            children: date\n          }, \"RCA-header-\" + date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this);\n        });\n      } catch {\n        throw new Error(\"date must be string or component\");\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RCA-calendar-date-header\",\n      children: this.mapArrayToDate(this.dateToArray(this.props.dates))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default class Calendar extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      calendarMonth: moment(),\n      today: moment()\n    };\n\n    this.moveMonth = month => {\n      this.setState({\n        calendarMonth: this.state.calendarMonth.add(month, \"M\")\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar_box\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        calendarMonth: this.state.calendarMonth.format(\"YYYY년 MM월\"),\n        moveMonth: this.moveMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar_contents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","useEffect","useState","useRef","Header","moment","render","DateHeader","Component","dateToArray","dates","Array","isArray","split","mapArrayToDate","dateArray","length","console","log","Error","map","date","index","className","props","Calendar","state","calendarMonth","today","moveMonth","month","setState","add","format"],"sources":["D:/reactProject/opensales/src/calendar/Calendarcopy.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport Header from \"./Header\";\r\nimport \"./Calendar.css\";\r\nimport moment from \"moment\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\nclass DateHeader extends React.Component {\r\n  dateToArray = (dates) => {\r\n    if (Array.isArray(dates)) {\r\n      return dates;\r\n    } else if (typeof dates === \"string\") {\r\n      return dates.split(\",\");\r\n    } else {\r\n      return [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\r\n    }\r\n  };\r\n\r\n  mapArrayToDate = (dateArray) => {\r\n    try {\r\n      if (dateArray.length !== 7) {\r\n        console.log(new Error(\"dates props must be had 7 date\"));\r\n        dateArray = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\r\n      }\r\n\r\n      return dateArray.map((date, index) => {\r\n        const className = () => {\r\n          let className = \"RCA-calendar-date-component\";\r\n          if (index === 0) {\r\n            return className + \" date-sun\";\r\n          } else if (index === 6) {\r\n            return className + \" date-sat\";\r\n          } else {\r\n            return className + \" date-weekday\";\r\n          }\r\n        };\r\n        return (\r\n          <div className={className()} key={\"RCA-header-\" + date}>\r\n            {date}\r\n          </div>\r\n        );\r\n      });\r\n    } catch {\r\n      throw new Error(\"date must be string or component\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"RCA-calendar-date-header\">\r\n        {this.mapArrayToDate(this.dateToArray(this.props.dates))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class Calendar extends React.Component {\r\n  state = {\r\n    calendarMonth: moment(),\r\n    today: moment(),\r\n  };\r\n  moveMonth = (month) => {\r\n    this.setState({\r\n      calendarMonth: this.state.calendarMonth.add(month, \"M\"),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"calendar_box\">\r\n        <Header\r\n          calendarMonth={this.state.calendarMonth.format(\"YYYY년 MM월\")}\r\n          moveMonth={this.moveMonth}\r\n        />\r\n        <div className=\"calendar_contents\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}