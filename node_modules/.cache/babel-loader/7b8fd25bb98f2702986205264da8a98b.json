{"ast":null,"code":"import _regeneratorRuntime from\"D:/reactProject/opensales/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/reactProject/opensales/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/reactProject/opensales/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import moment from\"moment\";import Comments from\"../components/Comments\";import axios from\"axios\";import{useNavigate}from\"react-router-dom\";import{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PostBox(_ref){var live=_ref.live,postList=_ref.postList,seedetail=_ref.seedetail,goBack=_ref.goBack;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),commentViewState=_useState2[0],setCommentsViewState=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),userPic=_useState4[0],setUserPic=_useState4[1];var navigate=useNavigate();//세션에 User-account가 남아 있지 않다면 로그인 화면으로 이동\nuseEffect(function(){var url=\"/user/info/\"+postList.userId.id;var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var result;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(url);case 2:result=_context.sent;// 유저 정보가 존재하지 않을경우 로그인 페이지\nif(result.data.userProfileId.userAccount===\"\"||result.data.userProfileId.userAccount===undefined||result.length===0){navigate(\"/login\");}else{// 사용자 프로필 사진 설정\nsetUserPic(result.data.userProfilePicPath);console.log(result);}case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();},[]);//댓글 창 state 변경 함수\nvar showCommentsView=function showCommentsView(){if(commentViewState===true){setCommentsViewState(false);}else{setCommentsViewState(true);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"postList_box\",\"data-postid\":postList.id,onClick:function onClick(){console.log(\"상세보기입니다.\");},ref:live,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"post_user_box\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"post_user_pic\",src:process.env.PUBLIC_URL+userPic,alt:\"\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"post_user_txt_box\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"post_user_name\",children:postList.writer}),/*#__PURE__*/_jsx(\"div\",{className:\"post_date\",children:moment(postList.updatedDate).format(\"YYYY년 MM월 DD일\")}),/*#__PURE__*/_jsx(\"div\",{className:\"post_title\",children:postList.title})]}),/*#__PURE__*/_jsx(\"div\",{className:\"post_edit\",children:\"\\uD3B8\\uC9D1\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"post_contents\",children:postList.contents}),/*#__PURE__*/_jsx(\"div\",{className:\"post_show_comments\",onClick:showCommentsView,children:\"\\uB313\\uAE00\"}),commentViewState!==false&&/*#__PURE__*/_jsx(Comments,{placeholder:\"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"})]});}export default PostBox;","map":{"version":3,"names":["React","moment","Comments","axios","useNavigate","useState","useEffect","PostBox","live","postList","seedetail","goBack","commentViewState","setCommentsViewState","userPic","setUserPic","navigate","url","userId","id","fetchData","get","result","data","userProfileId","userAccount","undefined","length","userProfilePicPath","console","log","showCommentsView","process","env","PUBLIC_URL","writer","updatedDate","format","title","contents"],"sources":["D:/reactProject/opensales/src/board/postBox.js"],"sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport Comments from \"../components/Comments\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction PostBox({ live, postList, seedetail, goBack }) {\r\n  const [commentViewState, setCommentsViewState] = useState(false);\r\n  const [userPic, setUserPic] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  //세션에 User-account가 남아 있지 않다면 로그인 화면으로 이동\r\n  useEffect(() => {\r\n    let url = \"/user/info/\" + postList.userId.id;\r\n    const fetchData = async () => {\r\n      const result = await axios.get(url);\r\n      // 유저 정보가 존재하지 않을경우 로그인 페이지\r\n      if (result.data.userProfileId.userAccount === \"\" || result.data.userProfileId.userAccount === undefined || result.length === 0) {\r\n        navigate(\"/login\");\r\n      } else {\r\n        // 사용자 프로필 사진 설정\r\n        setUserPic(result.data.userProfilePicPath);\r\n        console.log(result);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  //댓글 창 state 변경 함수\r\n  const showCommentsView = () => {\r\n    if (commentViewState === true) {\r\n      setCommentsViewState(false);\r\n    } else {\r\n      setCommentsViewState(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"postList_box\"\r\n      data-postid={postList.id}\r\n      onClick={() => {\r\n        console.log(\"상세보기입니다.\");\r\n      }}\r\n      ref={live}\r\n    >\r\n      <div className=\"post_user_box\">\r\n        {/* 프로필 사진 , 이름 , 날짜 */}\r\n        <img className=\"post_user_pic\" src={process.env.PUBLIC_URL + userPic} alt=\"\"></img>\r\n        <div className=\"post_user_txt_box\">\r\n          <div className=\"post_user_name\">{postList.writer}</div>\r\n          <div className=\"post_date\">{moment(postList.updatedDate).format(\"YYYY년 MM월 DD일\")}</div>\r\n          <div className=\"post_title\">{postList.title}</div>\r\n        </div>\r\n        <div className=\"post_edit\">편집</div>\r\n      </div>\r\n      {/* 게시글 내용 */}\r\n      <div className=\"post_contents\">{postList.contents}</div>\r\n      {/* 댓글 */}\r\n      <div className=\"post_show_comments\" onClick={showCommentsView}>\r\n        댓글\r\n      </div>\r\n      {commentViewState !== false && <Comments placeholder=\"댓글을 입력하세요.\" />}\r\n    </div>\r\n  );\r\n}\r\nexport default PostBox;\r\n"],"mappings":"6VAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAOC,OAAP,KAAmB,QAAnB,CACA,MAAOC,SAAP,KAAqB,wBAArB,CACA,MAAOC,MAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,C,wFAEA,QAASC,QAAT,MAAwD,IAArCC,KAAqC,MAArCA,IAAqC,CAA/BC,QAA+B,MAA/BA,QAA+B,CAArBC,SAAqB,MAArBA,SAAqB,CAAVC,MAAU,MAAVA,MAAU,CACtD,cAAiDN,QAAQ,CAAC,KAAD,CAAzD,wCAAOO,gBAAP,eAAyBC,oBAAzB,eACA,eAA8BR,QAAQ,CAAC,EAAD,CAAtC,yCAAOS,OAAP,eAAgBC,UAAhB,eACA,GAAMC,SAAQ,CAAGZ,WAAW,EAA5B,CAEA;AACAE,SAAS,CAAC,UAAM,CACd,GAAIW,IAAG,CAAG,cAAgBR,QAAQ,CAACS,MAAT,CAAgBC,EAA1C,CACA,GAAMC,UAAS,6FAAG,sKACKjB,MAAK,CAACkB,GAAN,CAAUJ,GAAV,CADL,QACVK,MADU,eAEhB;AACA,GAAIA,MAAM,CAACC,IAAP,CAAYC,aAAZ,CAA0BC,WAA1B,GAA0C,EAA1C,EAAgDH,MAAM,CAACC,IAAP,CAAYC,aAAZ,CAA0BC,WAA1B,GAA0CC,SAA1F,EAAuGJ,MAAM,CAACK,MAAP,GAAkB,CAA7H,CAAgI,CAC9HX,QAAQ,CAAC,QAAD,CAAR,CACD,CAFD,IAEO,CACL;AACAD,UAAU,CAACO,MAAM,CAACC,IAAP,CAAYK,kBAAb,CAAV,CACAC,OAAO,CAACC,GAAR,CAAYR,MAAZ,EACD,CATe,sDAAH,kBAATF,UAAS,2CAAf,CAWAA,SAAS,GACV,CAdQ,CAcN,EAdM,CAAT,CAeA;AACA,GAAMW,iBAAgB,CAAG,QAAnBA,iBAAmB,EAAM,CAC7B,GAAInB,gBAAgB,GAAK,IAAzB,CAA+B,CAC7BC,oBAAoB,CAAC,KAAD,CAApB,CACD,CAFD,IAEO,CACLA,oBAAoB,CAAC,IAAD,CAApB,CACD,CACF,CAND,CAQA,mBACE,aACE,SAAS,CAAC,cADZ,CAEE,cAAaJ,QAAQ,CAACU,EAFxB,CAGE,OAAO,CAAE,kBAAM,CACbU,OAAO,CAACC,GAAR,CAAY,UAAZ,EACD,CALH,CAME,GAAG,CAAEtB,IANP,wBAQE,aAAK,SAAS,CAAC,eAAf,wBAEE,YAAK,SAAS,CAAC,eAAf,CAA+B,GAAG,CAAEwB,OAAO,CAACC,GAAR,CAAYC,UAAZ,CAAyBpB,OAA7D,CAAsE,GAAG,CAAC,EAA1E,EAFF,cAGE,aAAK,SAAS,CAAC,mBAAf,wBACE,YAAK,SAAS,CAAC,gBAAf,UAAiCL,QAAQ,CAAC0B,MAA1C,EADF,cAEE,YAAK,SAAS,CAAC,WAAf,UAA4BlC,MAAM,CAACQ,QAAQ,CAAC2B,WAAV,CAAN,CAA6BC,MAA7B,CAAoC,eAApC,CAA5B,EAFF,cAGE,YAAK,SAAS,CAAC,YAAf,UAA6B5B,QAAQ,CAAC6B,KAAtC,EAHF,GAHF,cAQE,YAAK,SAAS,CAAC,WAAf,0BARF,GARF,cAmBE,YAAK,SAAS,CAAC,eAAf,UAAgC7B,QAAQ,CAAC8B,QAAzC,EAnBF,cAqBE,YAAK,SAAS,CAAC,oBAAf,CAAoC,OAAO,CAAER,gBAA7C,0BArBF,CAwBGnB,gBAAgB,GAAK,KAArB,eAA8B,KAAC,QAAD,EAAU,WAAW,CAAC,oDAAtB,EAxBjC,GADF,CA4BD,CACD,cAAeL,QAAf"},"metadata":{},"sourceType":"module"}